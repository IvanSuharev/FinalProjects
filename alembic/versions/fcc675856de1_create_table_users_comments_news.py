"""create table users, comments, news

Revision ID: fcc675856de1
Revises: f41eb3bc781e
Create Date: 2023-02-26 17:13:36.355258

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "fcc675856de1"
down_revision = "f41eb3bc781e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "news_for_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("news")
    op.add_column("comments", sa.Column("news_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "comments", "news_for_user", ["news_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.drop_column("comments", "news_id")
    op.create_table(
        "news",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="news_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", "description", name="news_pkey"),
    )
    op.drop_table("news_for_user")
    # ### end Alembic commands ###
